<?php

/**
 * @file
 * Contains udn_login.module.
 */
use Drupal\Component\Utility\Crypt;
use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\Render\Element;
use Symfony\Component\HttpFoundation\Request;

/**
 * Implements hook_theme().
 */
function udn_login_theme() {
  return [
    'html__user__login' => [
      'render element' => 'html',
    ],
    'page__user__login' => [
      'render element' => 'page',
    ],
    'form__user_login_form' => [
      'render element' => 'form',
    ],
    'udn_login' => [
      'render element' => 'element',
    ],
  ];
}

function udn_login_theme_suggestions_form_alter(array &$suggestions,
  array $variables) {
  $suggestions[] = "form__" . $variables['element']['#form_id'];
}


/**
 * Implements hook_preprocess_HOOK().
 */
function udn_login_preprocess_html__user__login(&$variables) {
  // Create placeholder strings for these keys.
  // @see \Drupal\Core\Render\HtmlResponseSubscriber
  $types = [
    'styles' => 'css',
    'scripts' => 'js',
    'scripts_bottom' => 'js-bottom',
  ];
  $variables['placeholder_token'] = Crypt::randomBytesBase64(55);
  foreach ($types as $type => $placeholder_name) {
    $placeholder = '<' . $placeholder_name . '-placeholder token="' . $variables['placeholder_token'] . '">';
    $variables['#attached']['html_response_attachment_placeholders'][$type] = $placeholder;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function udn_login_preprocess_page__user__login(array &$variables) {
  if (isset($variables['page']['#attached']['library'])) {
    unset($variables['page']['#attached']['library']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function udn_login_preprocess_form__user_login_form(&$variables) {
  $element = $variables['element'];
  if (isset($element['#action'])) {
    $element['#attributes']['action'] = UrlHelper::stripDangerousProtocols($element['#action']);
  }
  Element::setAttributes($element, array('method', 'id'));
  if (empty($element['#attributes']['accept-charset'])) {
    $element['#attributes']['accept-charset'] = "UTF-8";
  }
  $variables['attributes'] = $element['#attributes'];
  $variables['children'] = $element['#children'];
}

/**
 * Implements hook_page_attachments_alter().
 */
function udn_login_page_attachments_alter(array &$attachments) {
  if ("user.login" === \Drupal::routeMatch()->getRouteName()) {
    unset($attachments['#attached']['library']);
  }
}
